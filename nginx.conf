worker_processes  8;
working_directory /var/www;
pid /run/nginx.pid;

events {
    worker_connections 8192;
}
rtmp {
    log_format new '$remote_addr';
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4096;

        application live {
            live on;
            access_log /var/log/rtmp_access.log;
            #access_log on;
            # Turn on HLS
            hls_type live;
            hls on;
            hls_continuous on;
            #name playlist.m3u8;
            hls_path /dev/shm/live/;
            hls_nested on;
            hls_fragment 10;
            hls_fragment_naming timestamp;
            hls_playlist_length 60;
            # disable consuming the stream from nginx as rtmp
            #deny play all;
            exec ln -sf /dev/shm/$app/$name/index.m3u8 /dev/shm/$app/$name/playlist.m3u8;
            exec ln -sf /dev/shm/$app/$name/index.m3u8 /dev/shm/$app/$name/video.m3u8;
        }
    }
}
http {
    resolver 8.8.8.8;
    tcp_nodelay on;
    sendfile off;
    tcp_nopush on;
    aio on;
    directio 1024;

    map $http_user_agent $filter_user_agent {
        default 'unknown';
        ~samsunghas-agent samsung;
        ~NetCast lg;
        ~Ol\xC3\xA9TV OLE-APP;
        ~iPhone ios;
        ~Android android;
        ~(MSIE|Mozilla) windows;
        ~VLC VLC;
        ~Xtream Xtream;
    }




    include       mime.types;
   

    keepalive_timeout  65;
    log_format live_logs1 ' [$time_local] | $status - $upstream_response_time - $remote_addr - $request - + $http_user_agent - $http_x_iptv_token';
    log_format live_logs2 '[$request_time] [$time_local] | $c -  $upstream_addr $request - $status - $upstream_cache_status | $http_user_agent >> IP REQUISITANTE -->> $remote_addr';
    log_format live_logs '$request_time - $remote_addr $time_local - "$request" $status $upstream_cache_status $upstream_response_time $http_user_agent';

    include /etc/nginx/upstream_local.conf;

    proxy_cache_path /dev/shm/cache_live levels=1:2 keys_zone=live:2m max_size=5G inactive=5m;
    proxy_cache live;
    proxy_cache_key $uri;
    proxy_cache_lock on;
    proxy_cache_lock_timeout 15s;
    proxy_connect_timeout 6s;
    proxy_read_timeout 6s;
 
        upstream oletv {
        include /etc/nginx/upstream.conf;
        }
   

    server {
        listen       80;
        listen     5000;
        access_log logs/access.log live_logs2;
        error_log logs/error.log;
        root /dev/shm/;
location ~* ^/live {
	root /dev/shm;
	access_log logs/live.log live_logs2;
           if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }

    }
}       
server {
        include /etc/nginx/block1.conf;

        listen       8080;
        listen       2086;
        listen       6666;
        access_log logs/access-cache.log live_logs;
        error_log logs/error-cache.log;
        root /usr/share/nginx/html;

location ~* ^/live {
             access_log logs/vai1.log live_logs2;
                
        location ~* ^/live/(.*)/tracks-(.*)/mono.m3u8 {
             set $c oletv;
             proxy_ignore_headers "Cache-Control" "Expires";
             proxy_set_header Host      oletvlive2.secure.footprint.net;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_pass http://$c;
             proxy_cache_valid 2s;
             proxy_cache live;
             access_log logs/vai_t.log live_logs2;
        }

        location ~* ^/live/(.*)/(.*).m3u8$ {
             set $c oletv;
             proxy_ignore_headers "Cache-Control" "Expires";
             proxy_set_header Host      oletvlive2.secure.footprint.net;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_pass http://$c;
             proxy_cache_valid 2s;
             proxy_cache live;
             access_log logs/vai.log live_logs2;
        }
        location ~* ^/live/(.*)/tracks-(.*)/(.+\.(ts|m4s|m4v|vtt|webvtt|mp4))$ {
             set $c oletv;
             proxy_cache_valid 5m;
             proxy_set_header Host      oletvlive2.secure.footprint.net;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_pass http://$c;
             proxy_cache live;
             access_log off;
        }
        location ~* ^/live/(.*)/(.+\.(ts|m4s|m4v|vtt|webvtt|mp4))$ {
             set $c oletv;
             proxy_cache_valid 5m;
             proxy_set_header Host      oletvlive2.secure.footprint.net;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_pass http://$c;
             proxy_cache live;
             access_log off;
        }
}        
    }


}
